// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Import Azure SQL Database parameters.
    /// </summary>
    public partial class ImportRequestParameters : ExportRequestParameters
    {
        /// <summary>
        /// Initializes a new instance of the ImportRequestParameters class.
        /// </summary>
        public ImportRequestParameters() { }

        /// <summary>
        /// Initializes a new instance of the ImportRequestParameters class.
        /// </summary>
        /// <param name="storageKeyType">The type of the storage key to use.
        /// Possible values include: 'StorageAccessKey',
        /// 'SharedAccessKey'</param>
        /// <param name="storageKey">The storage key to use.</param>
        /// <param name="storageUri">The storage uri to use.</param>
        /// <param name="administratorLogin">The name of the SQL
        /// administrator.</param>
        /// <param name="administratorLoginPassword">The password of the SQL
        /// administrator.</param>
        /// <param name="authenticationType">The authentication type.</param>
        /// <param name="databaseName">The name of the Azure SQL database to
        /// import.</param>
        /// <param name="edition">The edition for the Azure Sql Database being
        /// created. Possible values include: 'Basic', 'Standard',
        /// 'Premium'</param>
        /// <param name="serviceObjectiveName">The name of the service
        /// objective to assign to the Azure SQL Database.</param>
        /// <param name="maxSizeBytes">The maximum size for the newly imported
        /// database.</param>
        public ImportRequestParameters(StorageKeyType? storageKeyType = default(StorageKeyType?), string storageKey = default(string), string storageUri = default(string), string administratorLogin = default(string), string administratorLoginPassword = default(string), string authenticationType = default(string), string databaseName = default(string), ImportExportDatabaseEditions? edition = default(ImportExportDatabaseEditions?), string serviceObjectiveName = default(string), string maxSizeBytes = default(string))
            : base(storageKeyType, storageKey, storageUri, administratorLogin, administratorLoginPassword, authenticationType)
        {
            DatabaseName = databaseName;
            Edition = edition;
            ServiceObjectiveName = serviceObjectiveName;
            MaxSizeBytes = maxSizeBytes;
        }

        /// <summary>
        /// Gets or sets the name of the Azure SQL database to import.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName { get; set; }

        /// <summary>
        /// Gets or sets the edition for the Azure Sql Database being created.
        /// Possible values include: 'Basic', 'Standard', 'Premium'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "edition")]
        public ImportExportDatabaseEditions? Edition { get; set; }

        /// <summary>
        /// Gets or sets the name of the service objective to assign to the
        /// Azure SQL Database.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceObjectiveName")]
        public string ServiceObjectiveName { get; set; }

        /// <summary>
        /// Gets or sets the maximum size for the newly imported database.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxSizeBytes")]
        public string MaxSizeBytes { get; set; }

    }
}
