// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Represents an Azure SQL Elastic Pool (Elastic Pool).
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ElasticPool : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ElasticPool class.
        /// </summary>
        public ElasticPool() { }

        /// <summary>
        /// Initializes a new instance of the ElasticPool class.
        /// </summary>
        /// <param name="location">Resource location</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="creationDate">Gets the creation date of the Azure SQL
        /// Elastic Pool.</param>
        /// <param name="state">Gets the state of the Azure SQL Elastic
        /// Pool.</param>
        /// <param name="edition">Gets the edition of the Azure SQL Elastic
        /// Pool. Possible values include: 'Basic', 'Standard',
        /// 'Premium'</param>
        /// <param name="dtu">Gets the total shared DTU for the Sql Azure
        /// Database Elastic Pool.</param>
        /// <param name="databaseDtuMax">Gets the maximum DTU any one Sql
        /// Azure Database can consume.</param>
        /// <param name="databaseDtuMin">Gets the minimum DTU all Sql Azure
        /// Databases are guaranteed.</param>
        /// <param name="storageMB">Gets storage limit for the Sql Azure
        /// Database Elastic Pool in MB.</param>
        public ElasticPool(string location, string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), System.DateTime? creationDate = default(System.DateTime?), string state = default(string), string edition = default(string), int? dtu = default(int?), int? databaseDtuMax = default(int?), int? databaseDtuMin = default(int?), int? storageMB = default(int?))
            : base(location, id, name, type, tags)
        {
            CreationDate = creationDate;
            State = state;
            Edition = edition;
            Dtu = dtu;
            DatabaseDtuMax = databaseDtuMax;
            DatabaseDtuMin = databaseDtuMin;
            StorageMB = storageMB;
        }

        /// <summary>
        /// Gets the creation date of the Azure SQL Elastic Pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.creationDate")]
        public System.DateTime? CreationDate { get; private set; }

        /// <summary>
        /// Gets the state of the Azure SQL Elastic Pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.state")]
        public string State { get; private set; }

        /// <summary>
        /// Gets the edition of the Azure SQL Elastic Pool. Possible values
        /// include: 'Basic', 'Standard', 'Premium'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.edition")]
        public string Edition { get; private set; }

        /// <summary>
        /// Gets the total shared DTU for the Sql Azure Database Elastic Pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dtu")]
        public int? Dtu { get; private set; }

        /// <summary>
        /// Gets the maximum DTU any one Sql Azure Database can consume.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.databaseDtuMax")]
        public int? DatabaseDtuMax { get; private set; }

        /// <summary>
        /// Gets the minimum DTU all Sql Azure Databases are guaranteed.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.databaseDtuMin")]
        public int? DatabaseDtuMin { get; private set; }

        /// <summary>
        /// Gets storage limit for the Sql Azure Database Elastic Pool in MB.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.storageMB")]
        public int? StorageMB { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
