// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Create or update Sql Azure Database parameters.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class DatabaseCreateOrUpdateParameters : Resource
    {
        /// <summary>
        /// Initializes a new instance of the DatabaseCreateOrUpdateParameters
        /// class.
        /// </summary>
        public DatabaseCreateOrUpdateParameters() { }

        /// <summary>
        /// Initializes a new instance of the DatabaseCreateOrUpdateParameters
        /// class.
        /// </summary>
        /// <param name="location">Resource location</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="edition">Gets or sets the edition for the Azure Sql
        /// Database being updated or created.</param>
        /// <param name="collation">Gets or sets the collation of the Azure
        /// Sql Database being created.  You cannot change change the
        /// collation of an existing Azure Sql Database.</param>
        /// <param name="maxSizeBytes">Gets or sets the maximum size of the
        /// Azure Sql Database being created or updated in bytes.</param>
        /// <param name="requestedServiceObjectiveId">Gets or sets the service
        /// objective to be applied to the Azure Sql Database being created
        /// or updated.</param>
        /// <param name="requestedServiceObjectiveName">Gets or sets the
        /// service objective to be applied to the Azure Sql Database being
        /// created or updated.</param>
        /// <param name="elasticPoolName">Gets or sets the name of the Elastic
        /// Pool to put the Azure Sql Database in.</param>
        /// <param name="sourceDatabaseId">Gets or sets the resource id of the
        /// database to use as the source for the copy being created.</param>
        /// <param name="createMode">Gets or sets the create Mode for the
        /// Azure Sql Database database being created. Possible values
        /// include: 'Default', 'Copy', 'Secondary',
        /// 'NonReadableSecondary'</param>
        public DatabaseCreateOrUpdateParameters(string location, string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string edition = default(string), string collation = default(string), long? maxSizeBytes = default(long?), string requestedServiceObjectiveId = default(string), string requestedServiceObjectiveName = default(string), string elasticPoolName = default(string), string sourceDatabaseId = default(string), string createMode = default(string))
            : base(location, id, name, type, tags)
        {
            Edition = edition;
            Collation = collation;
            MaxSizeBytes = maxSizeBytes;
            RequestedServiceObjectiveId = requestedServiceObjectiveId;
            RequestedServiceObjectiveName = requestedServiceObjectiveName;
            ElasticPoolName = elasticPoolName;
            SourceDatabaseId = sourceDatabaseId;
            CreateMode = createMode;
        }

        /// <summary>
        /// Gets or sets the edition for the Azure Sql Database being updated
        /// or created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.edition")]
        public string Edition { get; set; }

        /// <summary>
        /// Gets or sets the collation of the Azure Sql Database being
        /// created.  You cannot change change the collation of an existing
        /// Azure Sql Database.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.collation")]
        public string Collation { get; set; }

        /// <summary>
        /// Gets or sets the maximum size of the Azure Sql Database being
        /// created or updated in bytes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.maxSizeBytes")]
        public long? MaxSizeBytes { get; set; }

        /// <summary>
        /// Gets or sets the service objective to be applied to the Azure Sql
        /// Database being created or updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.requestedServiceObjectiveId")]
        public string RequestedServiceObjectiveId { get; set; }

        /// <summary>
        /// Gets or sets the service objective to be applied to the Azure Sql
        /// Database being created or updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.requestedServiceObjectiveName")]
        public string RequestedServiceObjectiveName { get; set; }

        /// <summary>
        /// Gets or sets the name of the Elastic Pool to put the Azure Sql
        /// Database in.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.elasticPoolName")]
        public string ElasticPoolName { get; set; }

        /// <summary>
        /// Gets or sets the resource id of the database to use as the source
        /// for the copy being created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.sourceDatabaseId")]
        public string SourceDatabaseId { get; set; }

        /// <summary>
        /// Gets or sets the create Mode for the Azure Sql Database database
        /// being created. Possible values include: 'Default', 'Copy',
        /// 'Secondary', 'NonReadableSecondary'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.createMode")]
        public string CreateMode { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
