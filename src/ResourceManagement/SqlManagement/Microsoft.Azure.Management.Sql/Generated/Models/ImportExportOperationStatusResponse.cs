// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Response for Azure Sql Import/Export Status operation.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ImportExportOperationStatusResponse
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ImportExportOperationStatusResponse class.
        /// </summary>
        public ImportExportOperationStatusResponse() { }

        /// <summary>
        /// Initializes a new instance of the
        /// ImportExportOperationStatusResponse class.
        /// </summary>
        /// <param name="requestType">The type of the requested operation.
        /// Possible values include: 'Import', 'Export'</param>
        /// <param name="requestId">The request id for the operation.</param>
        /// <param name="serverName">The name of the Azure SQL Server.</param>
        /// <param name="databaseName">The name of the Azure SQL
        /// Database.</param>
        /// <param name="status">The status message returned from the server.
        /// Possible values include: 'Running', 'RunningAfterRestart',
        /// 'Pending', 'Completed', 'Failed'</param>
        /// <param name="lastModifiedTime">The operation status last modified
        /// time.</param>
        /// <param name="queuedTime">The operation queued time.</param>
        /// <param name="blobUri">The blob uri.</param>
        /// <param name="errorMessage">The error message returned from the
        /// server.</param>
        /// <param name="id">The id returned from the server.</param>
        /// <param name="name">The name returned from the server.</param>
        /// <param name="type">The type returned from the server.</param>
        public ImportExportOperationStatusResponse(ImportExportOperationMode? requestType = default(ImportExportOperationMode?), System.Guid? requestId = default(System.Guid?), string serverName = default(string), string databaseName = default(string), ImportExportOperationStatus? status = default(ImportExportOperationStatus?), string lastModifiedTime = default(string), string queuedTime = default(string), string blobUri = default(string), string errorMessage = default(string), string id = default(string), string name = default(string), string type = default(string))
        {
            RequestType = requestType;
            RequestId = requestId;
            ServerName = serverName;
            DatabaseName = databaseName;
            Status = status;
            LastModifiedTime = lastModifiedTime;
            QueuedTime = queuedTime;
            BlobUri = blobUri;
            ErrorMessage = errorMessage;
            Id = id;
            Name = name;
            Type = type;
        }

        /// <summary>
        /// Gets or sets the type of the requested operation. Possible values
        /// include: 'Import', 'Export'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.requestType")]
        public ImportExportOperationMode? RequestType { get; set; }

        /// <summary>
        /// Gets or sets the request id for the operation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.requestId")]
        public System.Guid? RequestId { get; set; }

        /// <summary>
        /// Gets or sets the name of the Azure SQL Server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.serverName")]
        public string ServerName { get; set; }

        /// <summary>
        /// Gets or sets the name of the Azure SQL Database.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.databaseName")]
        public string DatabaseName { get; set; }

        /// <summary>
        /// Gets or sets the status message returned from the server. Possible
        /// values include: 'Running', 'RunningAfterRestart', 'Pending',
        /// 'Completed', 'Failed'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.status")]
        public ImportExportOperationStatus? Status { get; set; }

        /// <summary>
        /// Gets or sets the operation status last modified time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.lastModifiedTime")]
        public string LastModifiedTime { get; set; }

        /// <summary>
        /// Gets or sets the operation queued time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.queuedTime")]
        public string QueuedTime { get; set; }

        /// <summary>
        /// Gets or sets the blob uri.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.blobUri")]
        public string BlobUri { get; set; }

        /// <summary>
        /// Gets or sets the error message returned from the server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.errorMessage")]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// Gets the id returned from the server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the name returned from the server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the type returned from the server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

    }
}
