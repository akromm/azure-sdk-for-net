// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Represents the Azure SQL capabilities for a region.
    /// </summary>
    public partial class LocationCapability
    {
        /// <summary>
        /// Initializes a new instance of the LocationCapability class.
        /// </summary>
        public LocationCapability() { }

        /// <summary>
        /// Initializes a new instance of the LocationCapability class.
        /// </summary>
        /// <param name="name">The region name.</param>
        /// <param name="status">The status for the region with respect to
        /// Azure SQL. Possible values include: 'Visible', 'Available',
        /// 'Default'</param>
        /// <param name="supportedServerVersions">The list of supported Azure
        /// SQL Server versions.</param>
        public LocationCapability(string name = default(string), CapabilityStatus? status = default(CapabilityStatus?), System.Collections.Generic.IList<ServerVersionCapability> supportedServerVersions = default(System.Collections.Generic.IList<ServerVersionCapability>))
        {
            Name = name;
            Status = status;
            SupportedServerVersions = supportedServerVersions;
        }

        /// <summary>
        /// Gets the region name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the status for the region with respect to Azure SQL. Possible
        /// values include: 'Visible', 'Available', 'Default'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public CapabilityStatus? Status { get; private set; }

        /// <summary>
        /// Gets the list of supported Azure SQL Server versions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "supportedServerVersions")]
        public System.Collections.Generic.IList<ServerVersionCapability> SupportedServerVersions { get; private set; }

    }
}
