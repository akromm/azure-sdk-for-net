// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Create or update server parameters.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ServerCreateOrUpdateParameters : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ServerCreateOrUpdateParameters
        /// class.
        /// </summary>
        public ServerCreateOrUpdateParameters() { }

        /// <summary>
        /// Initializes a new instance of the ServerCreateOrUpdateParameters
        /// class.
        /// </summary>
        /// <param name="location">Resource location</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="version">Gets or sets the version for the server
        /// being updated or created.</param>
        /// <param name="administratorLogin">Gets or sets the Administrator
        /// Login of the server being created.</param>
        /// <param name="administratorLoginPassword">Gets or sets the
        /// Administrator Login Password of the server being created or
        /// updated.</param>
        public ServerCreateOrUpdateParameters(string location, string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string version = default(string), string administratorLogin = default(string), string administratorLoginPassword = default(string))
            : base(location, id, name, type, tags)
        {
            Version = version;
            AdministratorLogin = administratorLogin;
            AdministratorLoginPassword = administratorLoginPassword;
        }

        /// <summary>
        /// Gets or sets the version for the server being updated or created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets the Administrator Login of the server being created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.administratorLogin")]
        public string AdministratorLogin { get; set; }

        /// <summary>
        /// Gets or sets the Administrator Login Password of the server being
        /// created or updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.administratorLoginPassword")]
        public string AdministratorLoginPassword { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
