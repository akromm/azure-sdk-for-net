// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using System.Linq;

    /// <summary>
    /// Represents the Azure SQL Server edition capabilities. This represents
    /// the service tier of the database (Eg: Basic, Standard, Premium, ...).
    /// </summary>
    public partial class EditionCapability
    {
        /// <summary>
        /// Initializes a new instance of the EditionCapability class.
        /// </summary>
        public EditionCapability() { }

        /// <summary>
        /// Initializes a new instance of the EditionCapability class.
        /// </summary>
        /// <param name="name">The edition name (eg: Basic, Standard, Premium,
        /// ...).</param>
        /// <param name="status">The status of the Azure SQL Database edition.
        /// Possible values include: 'Visible', 'Available', 'Default'</param>
        /// <param name="supportedServiceLevelObjectives">The list of
        /// supported Service Objectives for the edition.</param>
        public EditionCapability(string name = default(string), CapabilityStatus? status = default(CapabilityStatus?), System.Collections.Generic.IList<ServiceObjectiveCapability> supportedServiceLevelObjectives = default(System.Collections.Generic.IList<ServiceObjectiveCapability>))
        {
            Name = name;
            Status = status;
            SupportedServiceLevelObjectives = supportedServiceLevelObjectives;
        }

        /// <summary>
        /// Gets the edition name (eg: Basic, Standard, Premium, ...).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the status of the Azure SQL Database edition. Possible values
        /// include: 'Visible', 'Available', 'Default'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public CapabilityStatus? Status { get; private set; }

        /// <summary>
        /// Gets the list of supported Service Objectives for the edition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "supportedServiceLevelObjectives")]
        public System.Collections.Generic.IList<ServiceObjectiveCapability> SupportedServiceLevelObjectives { get; private set; }

    }
}
